let allC = world.allPossibleCoordinates

let player1 = Character()
world.place(player1, facing: east, at: Coordinate(column: 1, row: 5))

let player2 = Expert()
world.place(player2, facing: west, at: Coordinate(column: 10, row: 5))


var gemCounter = 0
var switchCounter = 0
var gemScore = 0
var switchScore = 0

func gem1(){
    world.place(Gem(), at: Coordinate(column: 3, row: 5))
    
}
func gem2(){
    world.place(Gem(), at: Coordinate(column: 2, row: 5))
    world.place(Gem(), at: Coordinate(column: 4, row: 5))
}

func gem3() {
    world.place(Gem(), at: Coordinate(column: 3, row: 5))
    world.place(Gem(), at: Coordinate(column: 2, row: 6))
    world.place(Gem(), at: Coordinate(column: 4, row: 4))
}

func gem4(){
    world.place(Gem(), at: Coordinate(column: 2, row: 6))
    world.place(Gem(), at: Coordinate(column: 4, row: 6))
    world.place(Gem(), at: Coordinate(column: 2, row: 4))
    world.place(Gem(), at: Coordinate(column: 4, row: 4))
}

func gem5() {
    world.place(Gem(), at: Coordinate(column: 2, row: 6))
    world.place(Gem(), at: Coordinate(column: 4, row: 6))
    world.place(Gem(), at: Coordinate(column: 3, row: 5))
    world.place(Gem(), at: Coordinate(column: 2, row: 4))
    world.place(Gem(), at: Coordinate(column: 4, row: 4))
}


func playGem() {
    var gemGenerator = randomInt(from: 1, to: 5)
    if gemGenerator ==  1 {
        gem1()
        gemCounter += 1
    }
    else if gemGenerator ==  2 {
        gem2()
        gemCounter += 2
    }
    else if gemGenerator ==  3 {
        gem3()
        gemCounter += 3
    }
    else if gemGenerator ==  4 {
        gem4()
        gemCounter += 4
    }
    else if gemGenerator ==  5 {
        gem5()
        gemCounter += 5
    }
}


func sw1(){
    world.place(Switch(), at: Coordinate(column: 8, row: 5))
}

func sw2(){
    world.place(Switch(), at: Coordinate(column: 7, row: 5))
    world.place(Switch(), at: Coordinate(column: 9, row: 5))
    
}

func sw3() {
    world.place(Switch(), at: Coordinate(column: 7, row: 6))
    world.place(Switch(), at: Coordinate(column: 8, row: 5))
    world.place(Switch(), at: Coordinate(column: 9, row: 4))
}

func sw4(){
    world.place(Switch(), at: Coordinate(column: 7, row: 6))
    world.place(Switch(), at: Coordinate(column: 9, row: 6))
    world.place(Switch(), at: Coordinate(column: 7, row: 4))
    world.place(Switch(), at: Coordinate(column: 9, row: 4))
}

func sw5() {
    world.place(Switch(), at: Coordinate(column: 7, row: 6))
    world.place(Switch(), at: Coordinate(column: 9, row: 6))
    world.place(Switch(), at: Coordinate(column: 8, row: 5))
    world.place(Switch(), at: Coordinate(column: 7, row: 4))
    world.place(Switch(), at: Coordinate(column: 9, row: 4))
}

func playSwitch(){
    var switchGenerator = randomInt(from: 1, to: 5)
    if switchGenerator == 1 {
        sw1()
        switchGenerator += 1
    } else if switchGenerator == 2{
        sw2()
        switchCounter += 2
    } else if switchCounter == 3 {
        sw3()
        switchCounter += 3
    } else if switchCounter == 4 {
        sw4()
        switchCounter += 4
    } else if switchGenerator ==  5 {
        sw5()
        switchCounter += 5
    }
    
}

while gemScore != 5 && switchScore != 5 {
    for coordinate in allC {
        if coordinate.column >= 2 &&
            coordinate.column <= 9 &&
            coordinate.row >= 4 &&
            coordinate.row <= 6 {
            world.removeItems(at: coordinate)
        }
    }
    
    playGem()
    playSwitch()
    if gemCounter >  switchCounter {
        gemScore += 1
        world.place(Block(), at: Coordinate(column: 5, row: 7))
    } else if gemCounter < switchCounter {
        switchScore += 1
        world.place(Platform(), at: Coordinate(column: 6, row: 7))
    }
    
    gemCounter = 0
    switchCounter = 0
    if gemScore == 5 {
        player1.turnRight()
        player1.move(distance: 3)
        player1.turnLeft()
        player1.move(distance: 4)
        player1.turnRight()
        player1.danceLikeNoOneIsWatching()
    } else if switchScore == 5 {
        player2.turnLeft()
        player2.move(distance: 3)
        player2.turnRight()
        player2.move(distance: 4)
        player2.turnLeft()
        player2.danceLikeNoOneIsWatching()
    }
}